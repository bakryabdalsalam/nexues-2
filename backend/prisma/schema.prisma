generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  password      String
  name          String?
  role          UserRole      @default(USER)
  isActive      Boolean       @default(true)
  profile       Profile?
  applications  Application[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@map("users")
}

model Profile {
  id          String   @id @default(uuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  resume      String?
  skills      String[]
  experience  String?
  education   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Job {
  id              String        @id @default(uuid())
  title           String
  description     String
  company         String
  location        String
  experienceLevel String
  category        String
  salary          Float?
  remote          Boolean       @default(false)
  applications    Application[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Application {
  id           String           @id @default(uuid())
  jobId        String
  userId       String
  status       ApplicationStatus @default(PENDING)
  resume       String?
  coverLetter  String?
  job          Job              @relation(fields: [jobId], references: [id])
  user         User             @relation(fields: [userId], references: [id])
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

enum ApplicationStatus {
  PENDING
  REVIEWING
  ACCEPTED
  REJECTED
}
